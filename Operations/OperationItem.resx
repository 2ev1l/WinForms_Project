<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L/4HMPKR7rDR3FkAAAAASUVORK5CYII=
</value>
  </data>
</root>